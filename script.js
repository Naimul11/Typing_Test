document.addEventListener('DOMContentLoaded', function () { loadNewWordSet(); document.getElementById('word-box').style.visibility = "visible"; displayLeaderboard(); document.getElementById('toggle-leaderboard').addEventListener('click', toggleLeaderboard) }); let isRunning = !1; let interval; let correctWords = 0; let timer = 60; let incorrectWords = 0; let totalCharactersTyped = 0; let timeTaken = timer; let wordIndex = 0; document.getElementById('input-box').addEventListener('input', function (event) {
    if (this.value === " ") { this.value = ""; return }
    if (!isRunning && this.value.trim() !== "") { startTest() }
    if (this.value.trim() !== "" && this.value.slice(-1) === " ") { checkWord(); this.value = '' } else { validateCurrentInput(this.value) }
}); function startTest() { isRunning = !0; interval = setInterval(updateTimer, 1000) }
function updateTimer() { if (timer > 0) { timer--; document.getElementById('timer').textContent = timer } else { clearInterval(interval); document.getElementById('input-box').disabled = !0; showResults() } }
function checkWord() {
    const words = document.getElementById('word-box').textContent.split(/\s+/); const currentInput = document.getElementById('input-box').value.trim(); if (currentInput === words[wordIndex]) { totalCharactersTyped += currentInput.length + 1; correctWords++; document.getElementById('correct-count').textContent = correctWords } else {
        const currentWord = words[wordIndex]; let correctChars = 0; for (let i = 0; i < currentInput.length; i++) { if (currentInput[i] === currentWord[i]) { correctChars++ } }
        totalCharactersTyped += correctChars; if (incorrectWords > 20) { clearInterval(interval); document.getElementById('input-box').disabled = !0; alert("Too many mistakes! Please retry."); document.getElementById('result-text').textContent = "Your WPM is NaN"; document.getElementById('result-text').style.display = "block"; return }
        incorrectWords++; document.getElementById('incorrect-count').textContent = incorrectWords
    }
    wordIndex++; if (wordIndex >= words.length) { loadNewWordSet() } else { updateWordBox(words, !1) }
}
function validateCurrentInput(currentInput) { const words = document.getElementById('word-box').textContent.split(/\s+/); updateWordBox(words, !words[wordIndex].startsWith(currentInput)) }
function loadNewWordSet() { currentSet = generateRandomWords(8); updateWordBox(currentSet, !1); wordIndex = 0 }
function generateRandomWords(count) { const wordPool = [
        "about", "above", "add", "after", "again", "air", "all", "almost", "along", "also", "always", "America", "an", "and", "animal", "another", "answer", "any", "are", "around", "as", "ask", "at", "away", "back", "be", "because", "been", "before", "began", "begin", "being", "below", "between", "big", "book", "both", "boy", "but", "by", "call", "came", "can", "car", "carry", "change", "children", "city", "close", "come", "could", "country", "cut", "day", "did", "different", "do", "does", "don't", "down", "each", "earth", "eat", "end", "enough", "even", "every", "example", "eye", "face", "family", "far", "father", "feet", "few", "find", "first", "follow", "food", "for", "form", "found", "four", "from", "get", "girl", "give", "go", "good", "got", "great", "group", "grow", "had", "hand", "hard", "has", "have", "he", "head", "hear", "help", "her", "here", "high", "him", "his", "home", "house", "how", "idea", "if", "important", "in", "Indian", "into", "is", "it", "its", "it's", "just", "keep", "kind", "know", "land", "large", "last", "later", "learn", "leave", "left", "let", "letter", "life", "light", "like", "line", "list", "little", "live", "long", "look", "made", "make", "man", "many", "may", "me", "mean", "men", "might", "mile", "miss", "more", "most", "mother", "mountain", "move", "much", "must", "my", "name", "near", "need", "never", "new", "next", "night", "no", "not", "now", "number", "of", "off", "often", "oil", "old", "on", "once", "one", "only", "open", "or", "other", "our", "out", "over", "own", "page", "paper", "part", "people", "picture", "place", "plant", "play", "point", "put", "question", "quick", "quickly", "quite", "read", "really", "right", "river", "run", "said", "same", "saw", "say", "school", "sea", "second", "see", "seem", "sentence", "set", "she", "should", "show", "side", "small", "so", "some", "something", "sometimes", "song", "soon", "sound", "spell", "start", "state", "still", "stop", "story", "study", "such", "take", "talk", "tell", "than", "that", "the", "their", "them", "then", "there", "these", "they", "thing", "think", "this", "those", "thought", "three", "through", "time", "to", "together", "too", "took", "tree", "try", "turn", "two", "under", "until", "up", "us", "use", "very", "walk", "want", "was", "watch", "water", "way", "we", "well", "went", "were", "what", "when", "where", "which", "while", "white", "who", "why", "will", "with", "without", "word", "work", "world", "would", "write", "year", "you", "young", "your",
    ]; return Array.from({ length: count }, () => wordPool[Math.floor(Math.random() * wordPool.length)]) }
function updateWordBox(words, isError) { document.getElementById('word-box').innerHTML = words.map((word, index) => `<span class="${index === wordIndex ? (isError ? 'current-word incorrect' : 'current-word') : ''}">${word}</span>`).join(" ") }
function calculateWPM() { return Math.round((totalCharactersTyped / 5) / (60 / 60)) }
function showResults() { let finalWPM = calculateWPM(); document.getElementById('result-text').textContent = `Your WPM is ${finalWPM}`; document.getElementById('result-text').style.display = "block"; checkHighScore(finalWPM) }
function checkHighScore(score) { let leaderboard = JSON.parse(localStorage.getItem('leaderboard')) || []; if (leaderboard.length < 3 || score > leaderboard[leaderboard.length - 1].score) { let userName = prompt("ðŸŽ‰ You made it to the leaderboard! Enter your name:"); if (userName) { let incorrectWords = document.getElementById('incorrect-count').textContent; leaderboard.push({ name: userName, score: score, timer: timeTaken, incorrect: incorrectWords }); leaderboard.sort((a, b) => b.score - a.score); if (leaderboard.length > 3) leaderboard.pop(); localStorage.setItem('leaderboard', JSON.stringify(leaderboard)); displayLeaderboard(); fetch("https://script.google.com/macros/s/AKfycbwdLsDNLHyRZFW40uwUp8ixtAn_RLTsQf1MiDtyTgK2NnQkp1yOPgH4ltFpWTAzV9Re9g/exec", { method: "POST", mode: "no-cors", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ name: userName, wpm: score, timer: timeTaken, incorrect: incorrectWords }) }).then(response => console.log("Data sent successfully")).catch(error => console.error("Fetch Error:", error)) } } }
function displayLeaderboard() { let leaderboard = JSON.parse(localStorage.getItem('leaderboard')) || []; document.getElementById('leaderboard').innerHTML = "<h2>Leaderboard</h2>" + leaderboard.map((entry, index) => `<p>${index + 1}. ${entry.name} - ${entry.score} WPM</p>`).join("") }
function restartTest() { clearInterval(interval); document.getElementById('input-box').value = ""; document.getElementById('input-box').disabled = !1; document.getElementById('timer').textContent = "60"; correctWords = 0; timer = timeTaken; incorrectWords = 0; totalCharactersTyped = 0; wordIndex = 0; document.getElementById('correct-count').textContent = "0"; document.getElementById('incorrect-count').textContent = "0"; document.getElementById('result-text').style.display = "none"; loadNewWordSet(); isRunning = !1 }
function toggleLeaderboard() { const leaderboardContainer = document.getElementById('leaderboard-container'); const toggleButton = document.getElementById('toggle-leaderboard'); if (leaderboardContainer.style.right === "10px") { leaderboardContainer.style.right = "-300px"; toggleButton.style.right = "-30px" } else { leaderboardContainer.style.right = "10px"; toggleButton.style.right = "270px" } }
document.getElementById('reset-leaderboard').addEventListener('click', function () { localStorage.removeItem('leaderboard'); displayLeaderboard() })
